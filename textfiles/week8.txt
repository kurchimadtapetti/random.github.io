activity_main.xml


<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:gravity="center"
 tools:context=".MainActivity">
 <EditText
 android:id="@+id/editTextText"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:ems="10"
 android:hint="Username"
 android:inputType="text"
 android:minHeight="48dp" />
 <EditText
 android:id="@+id/editTextTextPassword"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@+id/editTextText"
 android:ems="10"
 android:hint="Password"
 android:inputType="textPassword"
 android:minHeight="48dp" />
 <Button
 android:id="@+id/button"
 android:layout_width="210dp"
 android:layout_height="wrap_content"
 android:layout_below="@+id/editTextTextPassword"
 android:text="Save details" />
 <Button
 android:id="@+id/button2"
 android:layout_width="210dp"
 android:layout_height="wrap_content"
 android:layout_below="@+id/button"
 android:text="Login" />
</RelativeLayout>


MainActivity.java

package com.example.week8;
import android.annotation.SuppressLint;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity {
 // creating variables for our edittext, button and dbhandler
 private EditText user, pass;
 private Button bt, bt2;
 public DBHell dbHandler;
 public DBHelC dbcreate;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 // initializing all our variables.
 user = findViewById(R.id.editTextText);
 pass = findViewById(R.id.editTextTextPassword);
 bt = findViewById(R.id.button);
 bt2=findViewById(R.id.button2);
 // creating a new dbhelper class
 // and passing our context to it.
 dbHandler = new DBHell(MainActivity.this);
 dbcreate = new DBHelC(MainActivity.this);
 SQLiteDatabase db = dbHandler.getReadableDatabase();
 bt.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 // Call a method to create the database table.
 String u = user.getText().toString();
 String p = pass.getText().toString();
 // validating if the text fields are empty or not.
 if (u.isEmpty() && p.isEmpty()) {
 Toast.makeText(MainActivity.this, "Please enter all the data..",
Toast.LENGTH_SHORT).show();
 return;
 }
 // on below line we are calling a method to add new
 // course to sqlite data and pass all our values to it.
 dbcreate.adduserdetails(u, p);
 // after adding the data we are displaying a toast message.
 Toast.makeText(MainActivity.this, "Data added.", Toast.LENGTH_SHORT).show();
 user.setText("");
 pass.setText("");
 }
 });
 // below line is to add on click listener for our add course button.
 bt2.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 // below line is to get data from all edit text fields.
 String u = user.getText().toString();
 String p = pass.getText().toString();
 // validating if the text fields are empty or not.
 if (u.isEmpty() && p.isEmpty()) {
 Toast.makeText(MainActivity.this, "Please enter all the data..",
Toast.LENGTH_SHORT).show();
 return;
 }
 Cursor c= dbHandler.getUserDetails(u, p);
 if (c.moveToFirst()) {
 // Process the results
 @SuppressLint("Range") String username = c.getString(c.getColumnIndex("user"));
 @SuppressLint("Range") String password = c.getString(c.getColumnIndex("pass"));
 // ...
 showSuccessDialog();
 } else {
 showFailureDialog(); }
 c.close();
 db.close();
 }
 });
 }
 private void showSuccessDialog() {
 AlertDialog.Builder builder = new AlertDialog.Builder(this);
 builder.setMessage("Login successful!");
 builder.setPositiveButton("OK", null);
 builder.show();
 }
 private void showFailureDialog() {
 AlertDialog.Builder builder = new AlertDialog.Builder(this);
 builder.setMessage("Login failed. Please check your credentials.");
 builder.setPositiveButton("OK", null);
 builder.show();
 }
}


DBHell.java


package com.example.week8;
import android.annotation.SuppressLint;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
public class DBHell extends SQLiteOpenHelper {
 // creating a constant variables for our database.
 // below variable is for our database name.
 private static final String DB_NAME = "week8DB";
 // below int is our database version
 private static final int DB_VERSION = 3;
 // below variable is for our table name.
 public static final String TABLE_NAME = "userdetails";
 // below variable is for our id column.
 public static final String ID_COL = "id";
 // below variable is for our course name column
 public static final String user_col = "user";
 // below variable id for our course duration column.
 public static final String pass_col = "pass";
 // creating a constructor for our database handler.
 public DBHell(Context context) {
 super(context, DB_NAME, null, DB_VERSION);
 }
 // below method is for creating a database by running a sqlite query
 @Override
 public void onCreate(SQLiteDatabase db) {
 // No need to call super.onCreate(db);
 String query = "CREATE TABLE " + TABLE_NAME + " ("
 + ID_COL + " INTEGER PRIMARY KEY AUTOINCREMENT, "
 + user_col + " TEXT, "
 + pass_col + " TEXT)";
 db.execSQL(query);
 }
 @Override
 public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
 // this method is called to check if the table exists already.
 db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
 onCreate(db);
 }
 public Cursor getUserDetails(String username, String password) {
 SQLiteDatabase db = getReadableDatabase();
 String query = "SELECT * FROM " + TABLE_NAME + " WHERE " + user_col + "=? AND " +
pass_col + "=?";
 String[] selectionArgs = new String[]{username, password};
 return db.rawQuery(query, selectionArgs);
 }
}


DBHelc.java
package com.example.week8;
import android.content.ContentValues;
import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
public class DBHelC extends SQLiteOpenHelper {
 // creating a constant variables for our database.
 // below variable is for our database name.
 private static final String DB_NAME = "week8DB";
 // below int is our database version
 private static final int DB_VERSION = 3;
 // below variable is for our table name.
 private static final String TABLE_NAME = "userdetails";
 // below variable is for our id column.
 private static final String ID_COL = "id";
 // below variable is for our course name column
 private static final String user_col = "user";
 // below variable id for our course duration column.
 private static final String pass_col = "pass";
 // creating a constructor for our database handler.
 public DBHelC(Context context) {
 super(context, DB_NAME, null, DB_VERSION);
 }
 // below method is for creating a database by running a sqlite query
 @Override
 public void onCreate(SQLiteDatabase db) {
 // on below line we are creating
 // an sqlite query and we are
 // setting our column names
 // along with their data types.
// Log.d("DBHelC", "onCreate called");
// String query = "CREATE TABLE " + TABLE_NAME + " ("
// + ID_COL + " INTEGER PRIMARY KEY AUTOINCREMENT, "
// + user_col + " TEXT,"
// + pass_col + " TEXT)";
// Log.d("DBHelC", "Create Table Query: " + query);
 String query = "CREATE TABLE " + TABLE_NAME + " ("
 + ID_COL + " INTEGER PRIMARY KEY AUTOINCREMENT, "
 + user_col + " TEXT, "
 + pass_col + " TEXT)";
 db.execSQL(query);
 // at last we are calling a exec sql
 // method to execute above sql query
 }
 // this method is use to add new course to our sqlite database.
 public void adduserdetails(String user, String pass) {
 // on below line we are creating a variable for
 // our sqlite database and calling writable method
 // as we are writing data in our database.
// SQLiteDatabase db = this.getWritableDatabase();
//
// // on below line we are creating a
// // variable for content values.
// ContentValues values = new ContentValues();
//
// // on below line we are passing all values
// // along with its key and value pair.
// values.put(user_col, user);
// values.put(pass_col, pass);
//
// // after adding all values we are passing
// // content values to our table.
// db.insert(TABLE_NAME, null, values);
//
// // at last we are closing our
// // database after adding database.
// db.close();
 SQLiteDatabase db = this.getWritableDatabase();
 ContentValues values = new ContentValues();
 values.put(user_col, user);
 values.put(pass_col, pass);
 long result = db.insert(TABLE_NAME, null, values);
 if (result == -1) {
 Log.e("DBHelC", "Error inserting data");
 } else {
 Log.d("DBHelC", "Data inserted successfully");
 }
 db.close();
 }
 @Override
 public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
 // this method is called to check if the table exists already.
 db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
 onCreate(db);
Â }
}



if you have any errors update this 
build.gradle.kts

plugins {
    id("com.android.application")
}

android {
    namespace = "com.example.week8"
    compileSdk = 33

    defaultConfig {
        applicationId = "com.example.week8"
        minSdk = 26
        targetSdk = 31
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            isMinifyEnabled = false
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation("androidx.appcompat:appcompat:1.6.1")
    implementation("com.google.android.material:material:1.8.0")
    implementation("androidx.constraintlayout:constraintlayout:2.1.4")
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
}